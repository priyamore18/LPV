# -*- coding: utf-8 -*-
"""ass3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PUIipNC4SZEMpHyvo_28BWCD1LZ9O12a
"""

import tensorflow as tf

from tensorflow import keras



import numpy as np
import matplotlib.pyplot as plt

fashion_mnist = keras.datasets.fashion_mnist

(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

train_images = train_images / 255.0
test_images = test_images / 255.0

from keras.models import Sequential
from keras.layers import Flatten, Dense

model=Sequential()

model.add(Flatten(input_shape=(28, 28)))

model.add(Dense(128,activation='relu'))

model.add(Dense(10,activation='softmax'))

model.compile(optimizer='adam',
loss='sparse_categorical_crossentropy',
metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=2)

test_loss, test_acc = model.evaluate(test_images, test_labels)
print('Test accuracy:', test_acc)



predictions = model.predict(test_images)
predicted_labels = np.argmax(predictions, axis=1)

"""predicted_labels which class image is defined and probability score of each image"""

num_cols = 5
num_rows = 5
num_images = num_rows * num_cols
plt.figure(figsize=(2 * 2 * num_cols, 2 * num_rows))
for i in range(num_images):
    plt.subplot(num_rows, 2 * num_cols, 2 * i + 1)
    plt.imshow(test_images[i], cmap='gray')
    plt.axis('off')

    plt.subplot(num_rows, 2 * num_cols, 2 * i + 2)
    plt.bar(range(10), predictions[i])
    plt.xticks(range(10))
    plt.ylim([0, 1])
    plt.tight_layout()
    plt.title(f"Predicted label: {predicted_labels[i]}")
plt.show()

"""for i in range(num_images):
    plt.subplot(num_rows, 2 * num_cols, 2 * i + 1)
    plt.imshow(test_images[i], cmap='gray')
    plt.axis('off') this for the image to display

   plt.subplot(num_rows, 2 * num_cols, 2 * i + 2)
    plt.bar(range(10), predictions[i])
    plt.xticks(range(10))
    plt.ylim([0, 1])
    plt.tight_layout()
    plt.title(f"Predicted label: {predicted_labels[i]}")

    this for the bar displar 1:bar chart into range 1 to 10 means categporty 2. x axis range,y as per the probability, 4.ajust the space
  
"""