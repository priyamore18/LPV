# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kRXCMFPa82_BEuynCvEoqSySCetRqnRx
"""

import pandas as pd

df = pd.read_csv('BostonHousing.csv')

print(df.head())

from sklearn.preprocessing import StandardScaler

X = df.drop('medv', axis=1)

y = df['medv']

scaler = StandardScaler()

X = scaler.fit_transform(X)

print(X[:5])

from sklearn.model_selection import train_test_split





X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

print('Training set shape:', X_train.shape, y_train.shape)

print('Testing set shape:', X_test.shape, y_test.shape)

from keras.models import Sequential

from keras.layers import Dense, Dropout

model = Sequential()

model.add(Dense(64, input_dim=13, activation='relu'))

model.add(Dropout(0.2))

model.add(Dense(32, activation='relu'))

model.add(Dense(1))

print(model.summary())



model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mean_absolute_error'])

from keras.callbacks import EarlyStopping

early_stopping = EarlyStopping(monitor='val_loss', patience=5)

history = model.fit(X_train, y_train, validation_split=0.2, epochs=100, batch_size=32,
callbacks=[early_stopping])

import matplotlib.pyplot as plt

import matplotlib.pyplot as plt

# Plot training & validation loss values
plt.plot(history.history['loss'], label='Training Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')

# Add title and labels
plt.title('Model Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')

# Show the legend
plt.legend()

# Display the plot
plt.show()

loss, mae = model.evaluate(X_test, y_test)

print('Mean Absolute Error:', mae)